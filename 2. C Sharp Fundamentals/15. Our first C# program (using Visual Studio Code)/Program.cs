///
/// In this lecture we'll learn how to create C# projects using Visual Studio Code.
/// 
/// We will also understand the meaning of the IDE abbreviation.
/// Additionally, we will learn what comments are and how to print messages to the console.
/// 
/// Let's create our first C# program.
/// Open Visual Studio Code
/// Now click on this top menu(search bar in top).
/// 
/// Select Show and Run Commands
/// And here find ".NET: New Project".
/// Let's click this option.
/// Here we have a bunch of project templates from which we can choose including desktop, web test, and
/// many others.
/// As you can see with .NET, we can create programs for various platforms and users.
/// For now, let's select the console application.
/// The most basic type of a C# app.
/// 
/// Right now we need to choose the directory where the project will be created.
/// Let's create a new folder to keep things organized.
/// 
/// Give name to the project.
/// 
/// 
/// Finally, let's confirm by clicking Create Project.
/// 
/// On left pannel we can see our project.
/// 
/// It currently has a single C# file called Program.
/// This project is ready to be run.
/// 
/// Visual Studio Code is a powerful IDE, so an Integrated Development Environment.
/// A program that is meant to help developers write and build source code.
/// 
/// If you want to take some notes right within the file, you can add your own comments like 
/// we are currently doing so.
/// You can use 
/// /// or //
/// for single line
/// And
/// /* comments */
/// for multi line comments
/// 
/// Please notice that in C#, we must have a semicolon at the end of each line containing a statement.
/// 
/// For now, we have a single solution containing a single project, and the project is represented by
/// this csproj file.
/// 
/// Currently, this project contains just one file called Program.cs.
/// There are also two folders generated by the compiler, but let's not pay attention to them now.
/// 
/// Please notice that all files containing C#code must have "cs" extension.
/// 
/// All right, let's build this program.
/// We can do it by clicking on the top menu(search area), selecting "task" (Run task), "dotnet" and "build".
/// 
/// The output from the build process is shown at the bottom of the screen.
/// 
/// Here we have a couple of other windows too, from which the one that will interest us most is the Problems
/// window.
/// 
/// Now lets run the program.
/// We can do this by 
/// clicking the arrow on the top right corner.
/// That arrow builds and runs the project associated with the currently
/// opened file.
/// 
/// 
///